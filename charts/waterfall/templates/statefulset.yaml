apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "waterfall.fullname" . }}
  labels:
    {{- include "waterfall.labels" . | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "waterfall.fullname" . }}
  selector:
    matchLabels:
      {{- include "waterfall.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "waterfall.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "waterfall.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          stdin: true
          tty: true
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          {{ range $k, $v := .Values.additionalEnv }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
          {{- end }}
            - name: GAMESERVER_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: waterfall
              containerPort: 25577
              protocol: TCP
          {{- with .Values.additionalPorts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: server-data
              mountPath: /data
              readOnly: false
            {{- if or (hasKey .Values.config "base_plugins_install_list.txt") (hasKey .Values.config "plugins_install_list.txt") }}
            - name: mc-pluginsinstall-txt
              mountPath: /plugins_install_list
              readOnly: true
            {{- end }}
            {{- with .Values.additionalVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if or (hasKey .Values.config "base_plugins_install_list.txt") (hasKey .Values.config "plugins_install_list.txt") }}
        - name: pluginswatcher
          command:
            - /scripts/git-sync.sh
            - watch
          env:
          {{ range $k, $v := .Values.additionalEnv }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
          {{- end }}
            - name: GAMESERVER_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 325Mi
          volumeMounts:
            - name: server-data
              mountPath: /data
              readOnly: false
            - name: mc-pluginsinstall-txt
              mountPath: /plugins_install_list
              readOnly: true
            {{- with .Values.additionalVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- end }}
        - name: sftp
          image: ghcr.io/linuxserver/openssh-server
          env:
            - name: PUID
              value: "1337"
            - name: PGID
              value: "1337"
            - name: TZ
              value: "Europe/Berlin"
            - name: PASSWORD_ACCESS
              value: "false"
            - name: USER_NAME
              value: "minecraft"
            - name: PUBLIC_KEY_FILE
              value: "/.ssh/authorized_keys"
          ports:
            - name: sftp
              containerPort: 2222
              protocol: TCP
          volumeMounts:
            - name: server-data
              mountPath: /data
            - name: ssh-authorizedkeys
              mountPath: /.ssh
        {{- with .Values.additionalContainers }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if or (hasKey .Values.config "base_plugins_install_list.txt") (hasKey .Values.config "plugins_install_list.txt") }}
        - name: mc-pluginsinstall-txt
          configMap:
            name: {{ include "waterfall.fullname" . }}
            items:
            {{- if hasKey .Values.config "base_plugins_install_list.txt" }}
            - key: base_plugins_install_list.txt
              path: base_plugins_install_list.txt
            {{- end }}
            {{- if hasKey .Values.config "plugins_install_list.txt" }}
            - key: plugins_install_list.txt
              path: plugins_install_list.txt
            {{- end }}
        {{- end }}
        - name: ssh-authorizedkeys
          configMap:
            name: ssh-authorizedkeys
      {{- with .Values.additionalVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        {{- include "waterfall.labels" . | nindent 8 }}
      name: server-data
    spec:
      accessModes:
        {{- .Values.storage.accessModes | toYaml | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.storage.capacity }}
      storageClassName: {{ .Values.storage.storageClassName }}
  {{- with .Values.additionalVolumeClaimTemplates }}
  {{- toYaml . | nindent 2 }}    
  {{- end }}
